public class {{.ClassName}}{{if .Inherits}} extends {{.Inherits}}{{end}}{{if gt (len .Abstraction) 0}} implements {{- range $index, $item := .Abstraction}}{{if $index}}, {{end}}{{$item}}{{- end}}{{end}} {
    {{- range .Attributes }}
    {{.AccessModifier}}{{if .IsClassVariable}} static{{end}}{{if .IsConstant}} final{{end}} {{.Type}} {{.Name}} {{- if .Value}} = {{stringFormation .Type .Value}}{{- end}};
    {{- end }}

    // default constructor
    public {{.ClassName}}() {
        {{- range .Attributes }}
        {{- if and (not .IsClassVariable) (not .IsConstant)}}
        this.{{.Name}} = {{defaultZero .Type}};
        {{- end}}
        {{- end }}
    }

    // constructor with all arguments
    public {{.ClassName}}(
    {{- range $index, $field := .Attributes }}
        {{- if and (not $field.IsClassVariable) (not $field.IsConstant) }}{{- if $index }}, {{ end }}{{$field.Type}} {{$field.Name}} {{- end }}{{- end }}) {
        {{- range .Attributes }}
        {{- if and (not .IsClassVariable) (not .IsConstant) }}
        this.{{.Name}} = {{.Name}};
        {{- end}}
        {{- end }}
    }

    {{- range .Attributes }}
    {{- if and (ne .AccessModifier "public") (not .IsClassVariable) (not .IsConstant) }}
    // Getter {{.Name}}
    public {{.Type}} get{{title .Name}}() {
        return {{.Name}};
    }
    // Setter {{.Name}}
    public void set{{title .Name}}({{.Type}} {{.Name}}) {
        this.{{.Name}} = {{.Name}};
    }
    {{end}}
    {{- end }}

{{- range .Methods }}
    {{.AccessModifier}} {{if .IsStatic}}static {{end}}{{.ReturnType}} {{.Name}}({{- range $index, $param := .Parameters }}{{if $index}}, {{end}}{{.Type}} {{.Name}}{{- end }}) {
        {{ $method := . }}
        {{- range .MethodBody }}
        {{- if .IsObjectCreation }}
        {{ .ObjectType }} {{ .ObjectName }} = new {{ .ObjectType }}({{- range $index, $param := .ObjFuncParameters }}{{- if $index }}, {{ end }}{{- if $param.Value }}{{ stringFormation $param.Typ $param.Value }}{{ else }}{{ $param.Name }}{{ end }}{{- end }});
        {{- else }}
        {{- if $method.ReturnValue }}
        {{ $method.ReturnType }} {{ $method.ReturnValue }} = {{ end }}{{ .FunctionName }}({{- range $index, $param := .ObjFuncParameters }}{{- if $index }}, {{ end }}{{- if $param.Value }}{{ $param.Value }}{{ else }}{{ $param.Name }}{{ end }}{{- end }});{{- end }}
        {{- end }}

        {{ if ne $method.ReturnType "void" }}return {{- if $method.ReturnValue }} {{stringFormation $method.ReturnType $method.ReturnValue }}{{ else }} {{ defaultZero $method.ReturnType }}{{ end }};{{- end }}
    }
{{- end }}

}
